diff --git a/globalredirect.module b/globalredirect.module
index 8f24754..af7cc1a 100644
--- a/globalredirect.module
+++ b/globalredirect.module
@@ -43,6 +43,12 @@ function globalredirect_init() {
     }
   }
 
+  // Get the query string parameters. If none set, set to NULL
+  $query_string = drupal_get_query_parameters();
+  if (empty($query_string)) {
+    $query_string = NULL;
+  }
+
   // Store the destination from the $_GET as, if we leave it in, drupal_goto()
   // will go to that instead.
   if (isset($_GET['destination'])) {
@@ -50,12 +56,6 @@ function globalredirect_init() {
     unset($_GET['destination']);
   }
 
-  // Get the query string parameters. If none set, set to NULL
-  $query_string = drupal_get_query_parameters();
-  if (empty($query_string)) {
-    $query_string = NULL;
-  }
-
   // Establish the language prefix that should be used, ie. the one that
   // drupal_goto() would use
   $options = array(
@@ -67,17 +67,12 @@ function globalredirect_init() {
     'external' => FALSE,
   );
 
-  // Get the request path. We cannot use request_path() as it uses a completely trimmed path.
-  // We need just left trimmed.
   $request_path = globalredirect_request_path();
+  $current_path = current_path();
+  $path = $current_path;
 
-
-  // Allow Drupal to rewrite the URL
-  // Most commonly this will be used to invoke locale_language_url_rewrite_url().
-  // Via the locale_url_outbound_alter() implementation of hook_url_outbound_alter().
-  // NOTE: We use $request_path here as current_path() is $_GET['q'] which gets
-  //       altered by core, whereas $request_path is untouched
-  drupal_alter('url_outbound', $request_path, $options, $request_path);
+  // Allow other modules to alter the outbound URL and options.
+  drupal_alter('url_outbound', $path, $options, $path);
 
   // Extract the prefix from the options.
   $prefix = rtrim($options['prefix'], '/');
@@ -104,11 +99,6 @@ function globalredirect_init() {
     return;
   }
 
-
-  // Get the current page - it's already "deslashed"
-  $current_path = current_path();
-
-
   // Optional stripping of "/0". Disabled by default.
   switch ($settings['trailing_zero']) {
     case 2 :
@@ -137,6 +127,11 @@ function globalredirect_init() {
     }
   }
 
+  // If we have a prefix, we need to make sure the prefix end with a slash
+  if ($prefix) {
+    $prefix .= '/';
+  }
+
   // If Content Translation module is enabled then check the path is correct.
   if ($settings['language_redirect'] && module_exists('translation') && preg_match('/node\/([0-9]+)(\/view|)$/', $current_path, $matches)) {
     switch (variable_get('locale_language_negotiation_url_part', LOCALE_LANGUAGE_NEGOTIATION_URL_PREFIX)) {
@@ -167,15 +162,17 @@ function globalredirect_init() {
       case LOCALE_LANGUAGE_NEGOTIATION_URL_DOMAIN:
         // Let's check is there other languages on site.
         $all_languages = language_list();
-        if (count($all_languages) > 1) {
+        $node = node_load($matches[1]);
+        if (isset($node->language) && $node->language != LANGUAGE_NONE && $node->language != $language->language && count($all_languages) > 1) {
           foreach ($all_languages as $l => $lang) {
             // Only test for languages other than the current one.
             if ($lang->language != $language->language) {
-              $alias = drupal_get_path_alias($current_path, $lang->language);
+              $alias = drupal_get_path_alias($path, $lang->language);
               // There is a matching language for this alias
-              if ($alias != $current_path) {
+              if ($prefix . $alias != $request_path) {
                 if (isset($lang->domain)) {
-                  drupal_goto($lang->domain . '/' . $alias, $options, 301);
+                 $options['language'] = $lang;
+                 globalredirect_goto($alias, $options);
                 }
                 break;
               }
@@ -187,17 +184,8 @@ function globalredirect_init() {
   }
 
   // Find an alias (if any) for the request
-  $langcode = isset($options['language']->language) ? $options['language']->language : '';
-  $alias = drupal_get_path_alias($current_path, $langcode);
-
-  // Modules may alter outbound links by reference
-  drupal_alter('url_outbound', $alias, $options, $current_path);
-
-  // If we have a prefix AND an alias, we need to make sure the prefix end with
-  // a slash
-  if ($prefix && $alias) {
-    $prefix .= '/';
-  }
+  $langcode = isset($options['language']->language) ? $options['language']->language : NULL;
+  $alias = drupal_get_path_alias($path, $langcode);
 
   // Alias case sensitivity check.
   // NOTE: This has changed. In D6 the $alias matched the request (in terms of
@@ -207,17 +195,22 @@ function globalredirect_init() {
   // enabled, the alias SHOULD be the accurate $alias from above, otherwise it
   // should be the request_path().
   // TODO: Test if this breaks the language checking above!
-  if (strcasecmp($alias, request_path()) == 0) {
+  if (strcasecmp($prefix . $alias, $request_path) == 0) {
     // The alias and the request are identical (case insensitive)... Therefore...
-    $alias = $settings['case_sensitive_urls'] ? $alias : request_path();
+    $alias = $settings['case_sensitive_urls'] ? $alias : preg_replace('`^' . $prefix.  '`i', '', $request_path);
   }
 
+  // Construct a normalized request path ($current_path has been run
+  // through drupal_get_normal_path()), basically we only keep any possible
+  // trailing slash and replace the rest
+  $normalized_request_path = $prefix . $current_path . (substr($request_path, -1) === '/' ? '/' : '');
+
   // Compare the request to the alias. This also works as a 'deslashing'
   // agent. If we have a language prefix then prefix the alias
-  if ($request_path != $prefix . $alias) {
+  if ($request_path != $prefix . $alias && $normalized_request_path != $prefix . $alias) {
     // If it's not just a slash or user has deslash on, redirect
     if (str_replace($prefix . $alias, '', $request_path) != '/' || $settings['deslash']) {
-      globalredirect_goto($alias, $options);
+      globalredirect_goto($current_path, $options);
     }
   }
 
@@ -261,13 +254,13 @@ function globalredirect_init() {
   if ($settings['canonical']) {
     drupal_add_html_head_link(array(
       'rel' => 'canonical',
-      'href' => url(drupal_is_front_page() ? '<front>' : $request_path, array('absolute' => TRUE, 'query' => $query_string)),
+      'href' => url(drupal_is_front_page() ? '<front>' : $current_path, array('absolute' => TRUE) + $options),
     ));
   }
 
   // Add the Content-Location header to the page
   if ($settings['content_location_header']) {
-    drupal_add_http_header('Content-Location', url(drupal_is_front_page() ? '<front>' : $request_path, array('absolute' => TRUE, 'query' => $query_string)));
+    drupal_add_http_header('Content-Location', url(drupal_is_front_page() ? '<front>' : $current_path, array('absolute' => TRUE) + $options));
   }
 }
 
@@ -406,21 +399,27 @@ function _globalredirect_get_settings($default_only = FALSE) {
   return variable_get('globalredirect_settings', array()) + $defaults;
 }
 
-
 /**
- * globalredirect_request_path() is borrowed from request_uri(), but it only ltrim's..
+ * globalredirect_request_path() is borrowed from request_path(),
+ * but it only ltrim's.
  */
 function globalredirect_request_path() {
-  if (request_uri()) {
-    if (isset($_REQUEST['q'])) {
-      $path = $_REQUEST['q'];
-    }
-    else {
-      // This is a request using a clean URL. Extract the path from REQUEST_URI.
-      $request_path = strtok(request_uri(), '?');
-      $base_path_len = drupal_strlen(rtrim(dirname($_SERVER['SCRIPT_NAME']), '\/'));
-      // Unescape and strip $base_path prefix, leaving q without a leading slash.
-      $path = drupal_substr(urldecode($request_path), $base_path_len + 1);
+  if (isset($_REQUEST['q']) && is_string($_REQUEST['q'])) {
+    $path = $_REQUEST['q'];
+  }
+  elseif (isset($_SERVER['REQUEST_URI'])) {
+    // This request is either a clean URL, or 'index.php', or nonsense.
+    // Extract the path from REQUEST_URI.
+    $request_path = strtok($_SERVER['REQUEST_URI'], '?');
+    $base_path_len = strlen(rtrim(dirname($_SERVER['SCRIPT_NAME']), '\/'));
+    // Unescape and strip $base_path prefix, leaving q without a leading slash.
+    $path = substr(urldecode($request_path), $base_path_len + 1);
+    // If the path equals the script filename, either because 'index.php' was
+    // explicitly provided in the URL, or because the server added it to
+    // $_SERVER['REQUEST_URI'] even when it wasn't provided in the URL (some
+    // versions of Microsoft IIS do this), the front page should be served.
+    if ($path == basename($_SERVER['PHP_SELF'])) {
+      $path = '';
     }
   }
   else {
