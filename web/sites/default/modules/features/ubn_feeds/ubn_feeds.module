<?php
/**
 * @file
 * Code for the Feeds feature.
 */

/**
 * Implements hook_cron()
 */
function ubn_feeds_cron() {
  /*
  //Garbage collect expired opening hour nodes
  $date_tz = date_default_timezone(FALSE);
  $tz = new DateTimeZone($date_tz);
  $datetime_today = new DateTime('now', $tz);
  $query = new EntityFieldQuery();
  $query
    ->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'opening_hours')
    //->addTag('efq_debug')
    ->fieldCondition('field_opening_hours_date', 'value', $datetime_today->format('Y-m-d') . ' 00:00:00', '<');

  $result = $query->execute();
  if(isset($result['node'])) {
    node_delete_multiple(array_keys($result['node']));
  }
  */
}

//TODO: Put in devel module?
/*
function ubn_feeds_query_alter($query) {
  if($query->hasTag('efq_debug')) {
    dsm((string)$query);
  }
}
 */

/**
 * Implements hook_feeds_processor_targets().
 */
function ubn_feeds_feeds_processor_targets($entity_type, $bundle_name) {
  // Add language support (entity translation) to text fields
  $targets = array();

  $text_types = array(
    'text',
    'text_long',
    'text_with_summary',
  );

  $languages = language_list();

  //$enabled_languages = entity_translation_languages($entity_type, $entity);
  //entity_translation_sync($entity_type, $entity)
  foreach (field_info_instances($entity_type, $bundle_name) as $name => $instance) {
    $info = field_info_field($name);
    if ($info['translatable'] && in_array($info['type'], $text_types)) {
      foreach($languages as $language) {
        $targets[$name . ':' . $language->prefix] = array(
          'name' => check_plain($instance['label']),
          'callback' => 'ubn_feeds_feeds_set_target',
          'description' => t('The @label field of the entity. (@language)', array('@label' => $instance['label'], '@language' => $language->language)),
        );
        if ($info['type'] == 'text_with_summary') {
          // Allow mapping to summary.
          $targets[$name . ':' . $language->prefix . ':summary'] = array(
            'name' => t('@name: Summary (@language)', array('@name' => $instance['label'], '@language' => $language->language)),
            'callback' => 'ubn_feeds_feeds_set_target',
            'description' => t('The @label field of the entity.', array('@label' => $instance['label'])),
            'real_target' => $name,
          );
        }
      }
      //TODO: report bug to feeds, this is in the wrong place in original mapper
      if (!empty($instance['settings']['text_processing'])) {
        $targets[$name . ':' . $language->prefix]['summary_callbacks'] = array('text_feeds_summary_callback');
        $targets[$name . ':' . $language->prefix]['form_callbacks'] = array('text_feeds_form_callback');
      }
    }
  }

  return $targets;
}

/**
 * Callback for mapping text fields.
 */
function ubn_feeds_feeds_set_target(FeedsSource $source, $entity, $target, array $values, array $mapping) {
  list($field_name, $language, $column) = explode(':', $target . ':value');

  if ($column === 'value' && isset($source->importer->processor->config['input_format'])) {
    $format = $source->importer->processor->config['input_format'];
    // Add in default values.
    $mapping += array(
      'format' => $format,
    );
  }

  $field = isset($entity->$field_name) ? $entity->$field_name : array($language => array());

  // Iterate over all values.
  $delta = 0;
  foreach ($values as $value) {

    if (is_object($value) && $value instanceof FeedsElement) {
      $value = $value->getValue();
    }

    if (is_scalar($value) && strlen($value)) {

      $field[$language][$delta][$column] = (string) $value;

      if (isset($mapping['format'])) {
        $field[$language][$delta]['format'] = $mapping['format'];
      }
    }

    $delta++;
  }

  $entity->$field_name = $field;
}
