<?php

function ubn_events_form_event_occation_node_form_alter(&$form, &$form_state) {
  // Hide title field to set automatically on save
  $form['title_field']['#access'] = FALSE;
}

/* TODO hook_node_presave probably works to */
function ubn_events_entity_presave($entity, $entity_type) {
  if ($entity_type === 'node' && $entity->type === 'event_occation') {
    $langcode = title_entity_language('node', $entity);
    $event_wrapper = entity_metadata_wrapper('node', $entity->field_event['und'][0]['target_id']);
    $event_wrapper->language($langcode);

    $scheduled_time = new DateObject(
      $entity->field_scheduled_time['und'][0]['value'],
      $entity->field_scheduled_time['und'][0]['timezone_db']
    );
    $field_tz = new DateTimeZone($entity->field_scheduled_time['und'][0]['timezone']);
    $scheduled_time->setTimezone($field_tz);
    $entity->title = $event_wrapper->label() . ' ' . $scheduled_time->format('Y-m-d');
  }
}

/**
 * Implements hook_slate_twig_alter().
 */
function ubn_events_slate_twig_alter($twig) {
  $path = libraries_get_path('calendar-links');

  // Could probably autoload, but meh, keep things simple
  require_once $path . '/src/Generator.php';
  require_once $path . '/src/Generators/Google.php';
  require_once $path . '/src/Generators/Ics.php';
  require_once $path . '/src/Generators/WebOutlook.php';
  require_once $path . '/src/Generators/Yahoo.php';
  require_once $path . '/src/Exceptions/InvalidLink.php';
  require_once $path . '/src/Link.php';

  $path = drupal_get_path('module', 'ubn_events');
  require_once $path . '/CalendarLinkTwigExtension.php';

  $twig->addExtension(new Drupal\ubn_events\Twig\CalendarLinkTwigExtension());
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function ubn_events_ctools_plugin_directory($owner, $plugin_type) {
  if (in_array($plugin_type, array('content_types'))) {
    return "plugins/$plugin_type";
  }
}

//TODO: Move these to ubn_general or other feature?
// since general view mode and not specific to this feature
/**
 * Implements hook_entity_info_alter().
 */
function ubn_events_entity_info_alter(&$entity_info) {
  $entity_info['node']['view modes']['ubn_teaser_small'] = array(
    'label' => t('UBN small teaser'),
    'custom settings' => FALSE,
  );
}

/* "All day" events are scheduled at midnight in local timezone */
function ubn_events_site_tz_midnight_in_utc() {
    $utc = new DateTimeZone('UTC');
    // Convert site's midnight of today to UTC
    $site_tz = new DateTimeZone(date_default_timezone(FALSE));
    $site_tz_midnight_in_utc = new DateTime('now', $site_tz);
    // Set to midnight in local timezone
    $site_tz_midnight_in_utc->setTime(0, 0);
    // Convert to UTC
    $site_tz_midnight_in_utc->setTimeZone($utc);
    return $site_tz_midnight_in_utc;
}


/* Helpers: */

function ubn_events_is_all_day($from, $to) {
  $site_tz = new DateTimeZone(date_default_timezone(FALSE));
  $from->setTimezone($site_tz);
  $to->setTimezone($site_tz);
  return $from->format('H:i') == '00:00' &&
    $from->format('Y-m-d H:i') == $to->format('Y-m-d H:i');
}

function ubn_events_format_event_time($field) {
  $raw = $field->raw();

  $from = new DateObject($raw['value'], $raw['timezone_db']);
  $to = new DateObject($raw['value2'], $raw['timezone_db']);

  $site_tz = new DateTimeZone(date_default_timezone(FALSE));
  $from->setTimezone($site_tz);
  $to->setTimezone($site_tz);

  $from_date = date_format_date($from, 'custom', 'l j F');
  if (ubn_events_is_all_day($from, $to)) {
    return $from_date;
  }
  else {
    $from_formatted = t(
      '!date, at !time',
      array(
        '!date' => $from_date,
        '!time' => $from->format('H:i'),
      )
    );

    // Same dates
    if($from->format('Y-m-d') == $to->format('Y-m-d')) {
      // Same time
      if ($from->format('H:i') == $to->format('H:i')) {
        return $from_formatted;
      }
      else {
        // Different time, append end time
        return $from_formatted . ' - ' . $to->format('H:i');
      }
    }
    else {
      // Different dates (and times)
      return $from_formatted . ' - ' . t(
        '!date, at !time',
        array(
          '!date' => date_format_date($to, 'custom', 'l j F'),
          '!time' => $to->format('H:i'),
        )
      );
    }
  }
}
